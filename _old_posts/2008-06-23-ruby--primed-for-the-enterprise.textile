---
layout: post
title: Ruby - Primed for the Enterprise...
---

"Warbler":http://caldersphere.rubyforge.org/warbler/ is an enabler.  True, Warbler is a Rails-specific tool, and not really Ruby.  But, if Rails/JRuby isn't, at a minimum, a blip on you enterprise developer's radar you're missing something important.

Anyone who has ever spent a significant amount of development time with Java knows the dev cycle (code, build, test, deploy, test, code) is painful...especially with tools like Maven driving the bus.  For this reason alone I believe Ruby has an inroad to Enterprise development.  Keep in mind that SOA and web-based services are the general target.  Ruby (Rails) combined with a TDD/BDD attitude can promote a more pleasant cycle (test, code, test, code).

Here's a short list of the relevant stumbling blocks.  And no, XML processing isn't on the list (it is rather good, with multiple options - try Googling for more info)

* This is the "SOAP support":http://www.ruby-doc.org/stdlib/libdoc/soap/rdoc/index.html in Ruby.  Where the hell is the documentation.  What's the point of having rdoc if you aren't going to document the usage.  Lame.

* "Enterprise integration with Ruby":http://www.google.com/search?q=enterprise+integration+ruby&ie=utf-8&oe=utf-8&aq=t&rls=org.mozilla:en-US:official&client=firefox-a is a book put out in 2006, covering generic integration topics.  That's it, that's all there is as far as the formal discussion goes.  _A_ book.

Ok, see I said it was short.

With JRuby rolling, there's no reason not to enjoy the "fun" that comes with Ruby development.  Shoot, there's even Swing-focused tools like "Monkeybars"http://monkeybars.rubyforge.org/ that help make Java GUI development fun (ok, maybe just interesting - fun could be a stretch).

However unfortunate, I do think it will take JRuby to get some mainstream corporate use.  But, whatever it take right?  There's no excuse now, not to start looking at, talking about, and enjoying Ruby development.
